name: test-runner-actions
run-name: ${{ github.actor }} is testing platform
on:
  push:
    branches:
      - master

# jobs:
#   test-macos-disk:
#     runs-on: macos-13
#     steps:
#       - run: ps -ef
#       - run: wget https://pyarmor.dashingsoft.com/downloads/temp/a.bin
#       - run: chmod +x ./a.bin
#       - run: ./a.bin

# jobs:
#   test-ubuntu-disk:
#     runs-on: ubuntu-latest
#     steps:
#       - run: ps -ef
#       - run: wget https://pyarmor.dashingsoft.com/downloads/temp/a.out
#       - run: chmod +x ./a.out
#       - run: ./a.out

# jobs:
#   test-windows-disk:
#     runs-on: windows-latest
#     steps:
#       - run: echo "from ctypes import windll" > foo.py
#       - run: echo "print(windll.kernel32.CreateFileA('\\\\.\\PhysicalDrive0', 0, 3, 0, 3, 0, 0))" >> foo.py
#       - run: python foo.py
#       - run: Invoke-WebRequest -Uri https://pyarmor.dashingsoft.com/downloads/temp/a.exe -UseBasicParsing -OutFile a.exe
#       - run: .\a.exe
#       - run: Get-Process

jobs:
  test-ci-license:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.10'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - run: wget https://pyarmor.dashingsoft.com/downloads/temp/citest5829.tar.gz
      - run: tar xzf citest.tar.gz
      - run: pip install citest/pyarmor_cli_core-8.1.0-cp310-none-manylinux1_x86_64.whl
      - run: pip install citest/pyarmor_cli-9.2.0.tar.gz
      - run: pyarmor reg citest/pyarmor-ci-8000.zip
      - run: pyarmor gen --enable-rft citest/foo.py
